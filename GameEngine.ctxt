#BlueJ class context
comment0.target=GameEngine
comment0.text=\r\n\ Cette\ classe\ cr\u00E9e\ toutes\ les\ pi\u00E8ces,\ cr\u00E9e\ l'analyseur\ et\ d\u00E9marre\r\n\ le\ jeu.\ Il\ \u00E9value\ et\ ex\u00E9cute\ \u00E9galement\ les\ commandes\ que\r\n\ l'analyseur\ renvoie.\r\n\ \r\n\ @author\ \ K\u00E9vin\ Feltrin\r\n\ @version\ 18/04/2023\r\n
comment1.params=
comment1.target=GameEngine()
comment1.text=\r\n\ Constructeur\ de\ la\ classe\ GameEngine.\r\n\ Initialise\ les\ pi\u00E8ces\ du\ jeu,\ le\ parser\ et\ les\ mots\ de\ direction.\r\n
comment10.params=
comment10.target=void\ printLocationInfo()
comment10.text=\r\n\ Affiches\ d\u00E9tails\ de\ l'endroit\ dans\ lequel\ on\ est\ \r\n\ et\ o\u00F9\ nous\ pouvons\ aller.\r\n
comment11.params=pCommand
comment11.target=void\ look(Command)
comment11.text=\r\n\ Permet\ au\ joueur\ de\ regarder\ autour\ de\ lui\ dans\ la\ pi\u00E8ce\ courante.\ Si\ le\ joueur\ fournit\r\n\ un\ deuxi\u00E8me\ mot,\ la\ commande\ n'affiche\ les\ d\u00E9tails\ que\ de\ l'objet\ dont\ le\ nom\ est\ fourni\r\n\ en\ deuxi\u00E8me\ mot.\r\n\r\n\ @param\ pCommand\ La\ commande\ d'observation\ du\ joueur.\r\n
comment12.params=pCommand
comment12.target=void\ eat(Command)
comment12.text=\r\n\ M\u00E9thode\ pour\ consommer\ un\ cookie\ et\ augmenter\ la\ capacit\u00E9\ d'inventaire\ du\ joueur.\r\n\ @param\ pCommand\ La\ commande\ pour\ manger\ un\ aliment.\r\n
comment13.params=pCommand
comment13.target=void\ back(Command)
comment13.text=\r\n\ Permet\ au\ joueur\ de\ retourner\ \u00E0\ la\ pi\u00E8ce\ pr\u00E9c\u00E9dente\ visit\u00E9e.\r\n\ Si\ le\ joueur\ a\ fourni\ un\ deuxi\u00E8me\ mot,\ la\ commande\ affiche\ un\ message\ d'erreur.\r\n\r\n\ @param\ pCommand\ La\ commande\ de\ retour\ du\ joueur.\r\n
comment14.params=pCommand
comment14.target=void\ test(Command)
comment14.text=\r\n\ M\u00E9thode\ pour\ tester\ un\ fichier\ contenant\ des\ commandes.\r\n\ @param\ pCommand\ L'objet\ Command\ contenant\ le\ nom\ du\ fichier\ \u00E0\ tester.\r\n
comment15.params=pCommand
comment15.target=void\ take(Command)
comment15.text=\r\n\ Cette\ m\u00E9thode\ g\u00E8re\ la\ commande\ "prendre".\r\n\r\n\ @param\ pCommand\ La\ commande\ "prendre"\ \u00E0\ ex\u00E9cuter.\r\n
comment16.params=pCommand
comment16.target=void\ drop(Command)
comment16.text=\r\n\ Drops\ an\ item\ from\ the\ player's\ inventory\ and\ removes\ it\ from\ the\ inventory.\r\n\ @param\ pCommand\ the\ command\ object\ containing\ the\ item\ to\ be\ dropped\r\n
comment17.params=
comment17.target=void\ inventory()
comment17.text=\r\n\ Cette\ m\u00E9thode\ affiche\ l'inventaire\ du\ joueur\ ainsi\ que\ son\ poids\ total\ et\ son\ poids\ maximal\ possible.\r\n
comment18.params=
comment18.target=void\ timer()
comment18.text=\r\n\ Cette\ m\u00E9thode\ v\u00E9rifie\ si\ le\ joueur\ a\ encore\ des\ mouvements\ pour\ jouer.\ Si\ les\ mouvements\ sont\ \u00E9coul\u00E9s,\ la\ partie\ se\ termine.\r\n
comment19.params=pCommand
comment19.target=void\ charge(Command)
comment19.text=\r\n\ Cette\ m\u00E9thode\ permet\ de\ charger\ le\ Beamer\ dans\ l'inventaire\ du\ joueur.\r\n\ Si\ le\ joueur\ n'a\ pas\ le\ Beamer,\ il\ ne\ peut\ pas\ le\ charger.\r\n\ Si\ le\ Beamer\ est\ d\u00E9j\u00E0\ charg\u00E9,\ le\ joueur\ ne\ peut\ pas\ le\ charger\ \u00E0\ nouveau.\r\n\ @param\ pCommand\ Commande\ saisie\ par\ l'utilisateur\ pour\ charger\ le\ Beamer\r\n
comment2.params=pUserInterface
comment2.target=void\ setGUI(UserInterface)
comment2.text=\r\n\ D\u00E9finit\ l'interface\ utilisateur\ pour\ le\ moteur\ de\ jeu\ et\ affiche\ le\ message\ de\ bienvenue.\r\n\ @param\ pUserInterface\ L'interface\ utilisateur\ \u00E0\ d\u00E9finir.\r\n
comment20.params=pCommand
comment20.target=void\ fire(Command)
comment20.text=\r\n\ Cette\ m\u00E9thode\ permet\ de\ d\u00E9charger\ avec\ le\ Beamer.\r\n\ Si\ le\ joueur\ n'a\ pas\ le\ Beamer,\ il\ ne\ peut\ pas\ le\ d\u00E9charger.\r\n\ Si\ le\ Beamer\ n'est\ pas\ charg\u00E9,\ le\ joueur\ ne\ peut\ pas\ le\ d\u00E9charger.\r\n\ @param\ pCommand\ Commande\ saisie\ par\ l'utilisateur\ pour\ d\u00E9charger\ avec\ le\ Beamer\r\n
comment21.params=
comment21.target=void\ stopBTC()
comment3.params=
comment3.target=void\ printWelcome()
comment3.text=\r\n\ Affiche\ le\ message\ de\ bienvenue\ du\ jeu,\ avec\ des\ informations\ sur\ le\ contexte\ et\ les\ instructions.\r\n\ Appelle\ \u00E9galement\ la\ m\u00E9thode\ printLocationInfo()\ pour\ afficher\ les\ informations\ sur\ la\ pi\u00E8ce\ actuelle.\r\n
comment4.params=
comment4.target=void\ createRooms()
comment4.text=\r\n\ Cette\ m\u00E9thode\ cr\u00E9e\ les\ pi\u00E8ces\ du\ jeu\ et\ configure\ leurs\ sorties.\r\n\ Elle\ initialise\ \u00E9galement\ les\ objets\ et\ les\ attribue\ aux\ diff\u00E9rentes\ pi\u00E8ces.\r\n
comment5.params=pCommandLine
comment5.target=void\ interpretCommand(java.lang.String)
comment5.text=\r\n\ Cette\ m\u00E9thode\ permet\ de\ transformer\ et\ d'analyser\ la\ commande\ de\ l'utilisateur.\r\n\ Elle\ re\u00E7oit\ une\ cha\u00EEne\ de\ caract\u00E8res\ pStringCommand,\ qui\ est\ la\ commande\ entr\u00E9e\ par\ l'utilisateur.\r\n\ La\ m\u00E9thode\ affiche\ la\ commande\ entr\u00E9e,\ puis\ la\ convertit\ en\ une\ commande\ utilisable\ par\ le\ jeu\ gr\u00E2ce\ \u00E0\ un\ objet\ Parser.\r\n\ Ensuite,\ la\ m\u00E9thode\ v\u00E9rifie\ quelle\ est\ la\ commande\ entr\u00E9e,\ et\ ex\u00E9cute\ la\ m\u00E9thode\ correspondante.\r\n\ Si\ la\ commande\ entr\u00E9e\ est\ inconnue,\ la\ m\u00E9thode\ affiche\ un\ message\ d'erreur.\r\n\r\n\ @param\ pCommandLine\ La\ commande\ entr\u00E9e\ par\ l'utilisateur.\r\n
comment6.params=
comment6.target=void\ printHelp()
comment6.text=\r\n\ Affiche\ les\ commandes\ disponibles\ pour\ le\ joueur.\r\n
comment7.params=pRoom
comment7.target=Room\ getRoom(java.lang.String)
comment7.text=\r\n\ Retourne\ l'objet\ Room\ associ\u00E9\ au\ nom\ de\ la\ salle\ donn\u00E9.\r\n\ @param\ pRoom\ le\ nom\ de\ la\ salle\ \u00E0\ r\u00E9cup\u00E9rer\r\n\ @return\ l'objet\ Room\ associ\u00E9\ au\ nom\ de\ la\ salle\ donn\u00E9\r\n
comment8.params=pInstruction
comment8.target=void\ goRoom(Command)
comment8.text=\r\n\ D\u00E9place\ le\ joueur\ dans\ une\ nouvelle\ pi\u00E8ce\ en\ fonction\ de\ l'instruction\ de\ commande\ donn\u00E9e.\r\n\ Si\ l'instruction\ est\ invalide\ ou\ s'il\ n'y\ a\ pas\ de\ pi\u00E8ce\ dans\ la\ direction\ donn\u00E9e,\ affiche\ un\ message\ d'erreur.\r\n\ @param\ pInstruction\ La\ commande\ de\ d\u00E9placement\ du\ joueur.\r\n
comment9.params=
comment9.target=void\ endGame()
comment9.text=\r\n\ Permet\ de\ finir\ le\ jeu\r\n
numComments=22
